/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("address")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("address[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "address";
}

SIGNAL("address_clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("reg1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("reg1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg1";
}

SIGNAL("reg1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg1";
}

SIGNAL("reg1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg1";
}

SIGNAL("reg1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg1";
}

SIGNAL("reg2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("reg2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg2";
}

SIGNAL("reg2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg2";
}

SIGNAL("reg2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg2";
}

SIGNAL("reg2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg2";
}

SIGNAL("reg3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("reg3[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg3";
}

SIGNAL("reg3[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg3";
}

SIGNAL("reg3[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg3";
}

SIGNAL("reg3[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg3";
}

SIGNAL("reg4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("reg4[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg4";
}

SIGNAL("reg4[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg4";
}

SIGNAL("reg4[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg4";
}

SIGNAL("reg4[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg4";
}

SIGNAL("read/write")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("rom/ram")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("start_address")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("start_address[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "start_address";
}

SIGNAL("start_address[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "start_address";
}

SIGNAL("start_address[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "start_address";
}

SIGNAL("start_address[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "start_address";
}

SIGNAL("start_address[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "start_address";
}

SIGNAL("reg_clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("address[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("address[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 426.743;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 433.257;
	}
}

TRANSITION_LIST("address[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 427.023;
		LEVEL 0 FOR 572.977;
	}
}

TRANSITION_LIST("address[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69.49;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 76.938;
			LEVEL 0 FOR 63.062;
		}
		LEVEL 1 FOR 76.938;
		LEVEL 0 FOR 13.572;
	}
}

TRANSITION_LIST("address[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 39.694;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 46.938;
			LEVEL 0 FOR 33.062;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 46.938;
		LEVEL 0 FOR 13.368;
	}
}

TRANSITION_LIST("address_clk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 11.957;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 5.0;
		}
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 45.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 5.0;
				LEVEL 0 FOR 25.0;
			}
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 8.043;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 121.276;
		LEVEL 1 FOR 27.109;
		LEVEL 0 FOR 7.795;
		LEVEL X FOR 425.159;
		LEVEL 0 FOR 418.661;
	}
}

TRANSITION_LIST("data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 23.503;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 27.277;
		LEVEL 1 FOR 7.625;
		LEVEL X FOR 425.172;
		LEVEL 0 FOR 416.423;
	}
}

TRANSITION_LIST("data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 62.575;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 34.36;
		LEVEL 1 FOR 0.546;
		LEVEL X FOR 425.071;
		LEVEL 0 FOR 417.448;
	}
}

TRANSITION_LIST("data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 22.748;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 27.269;
		LEVEL 1 FOR 7.081;
		LEVEL 0 FOR 0.546;
		LEVEL X FOR 425.051;
		LEVEL 0 FOR 417.305;
	}
}

TRANSITION_LIST("reg1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 126.424;
		LEVEL 1 FOR 30.834;
		LEVEL 0 FOR 0.546;
		LEVEL X FOR 438.62;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 121.38;
			LEVEL X FOR 18.62;
		}
		LEVEL 0 FOR 121.38;
		LEVEL X FOR 2.196;
	}
}

TRANSITION_LIST("reg1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 34.669;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 30.834;
		LEVEL 1 FOR 0.546;
		LEVEL X FOR 438.62;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 121.38;
			LEVEL X FOR 18.62;
		}
		LEVEL 0 FOR 121.38;
		LEVEL X FOR 3.951;
	}
}

TRANSITION_LIST("reg1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 65.047;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 31.38;
		LEVEL X FOR 438.62;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 121.38;
			LEVEL X FOR 18.62;
		}
		LEVEL 0 FOR 121.38;
		LEVEL X FOR 3.573;
	}
}

TRANSITION_LIST("reg1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 34.491;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.834;
		LEVEL 1 FOR 0.546;
		LEVEL X FOR 438.62;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 121.38;
			LEVEL X FOR 18.62;
		}
		LEVEL 0 FOR 121.38;
		LEVEL X FOR 4.129;
	}
}

TRANSITION_LIST("reg2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 155.476;
		LEVEL 1 FOR 0.546;
		LEVEL X FOR 468.62;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 91.38;
			LEVEL X FOR 48.62;
		}
		LEVEL 0 FOR 91.38;
		LEVEL X FOR 3.978;
	}
}

TRANSITION_LIST("reg2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 64.858;
		LEVEL 1 FOR 90.834;
		LEVEL 0 FOR 0.546;
		LEVEL X FOR 468.62;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 91.38;
			LEVEL X FOR 48.62;
		}
		LEVEL 0 FOR 91.38;
		LEVEL X FOR 3.762;
	}
}

TRANSITION_LIST("reg2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 95.984;
		LEVEL 1 FOR 60.834;
		LEVEL 0 FOR 0.546;
		LEVEL X FOR 468.62;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 91.38;
			LEVEL X FOR 48.62;
		}
		LEVEL 0 FOR 91.38;
		LEVEL X FOR 2.636;
	}
}

TRANSITION_LIST("reg2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66.994;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.834;
		LEVEL 0 FOR 0.546;
		LEVEL X FOR 468.62;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 91.38;
			LEVEL X FOR 48.62;
		}
		LEVEL 0 FOR 91.38;
		LEVEL X FOR 1.626;
	}
}

TRANSITION_LIST("reg3[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 155.869;
		LEVEL X FOR 498.62;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 61.38;
			LEVEL X FOR 78.62;
		}
		LEVEL 0 FOR 61.38;
		LEVEL X FOR 4.131;
	}
}

TRANSITION_LIST("reg3[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 94.488;
		LEVEL 1 FOR 61.38;
		LEVEL X FOR 498.62;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 61.38;
			LEVEL X FOR 78.62;
		}
		LEVEL 0 FOR 61.38;
		LEVEL X FOR 4.132;
	}
}

TRANSITION_LIST("reg3[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 125.291;
		LEVEL 1 FOR 31.38;
		LEVEL X FOR 498.62;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 61.38;
			LEVEL X FOR 78.62;
		}
		LEVEL 0 FOR 61.38;
		LEVEL X FOR 3.329;
	}
}

TRANSITION_LIST("reg3[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 95.574;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.834;
		LEVEL 1 FOR 0.546;
		LEVEL X FOR 498.62;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 61.38;
			LEVEL X FOR 78.62;
		}
		LEVEL 0 FOR 61.38;
		LEVEL X FOR 3.046;
	}
}

TRANSITION_LIST("reg4[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 155.79;
		LEVEL X FOR 528.62;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 31.38;
			LEVEL X FOR 108.62;
		}
		LEVEL 0 FOR 31.38;
		LEVEL X FOR 4.21;
	}
}

TRANSITION_LIST("reg4[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 124.467;
		LEVEL 1 FOR 31.38;
		LEVEL X FOR 528.62;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 31.38;
			LEVEL X FOR 108.62;
		}
		LEVEL 0 FOR 31.38;
		LEVEL X FOR 4.153;
	}
}

TRANSITION_LIST("reg4[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 156.399;
		LEVEL 1 FOR 0.546;
		LEVEL X FOR 528.62;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 31.38;
			LEVEL X FOR 108.62;
		}
		LEVEL 0 FOR 31.38;
		LEVEL X FOR 3.055;
	}
}

TRANSITION_LIST("reg4[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 125.086;
		LEVEL 1 FOR 30.834;
		LEVEL 0 FOR 0.546;
		LEVEL X FOR 528.62;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 31.38;
			LEVEL X FOR 108.62;
		}
		LEVEL 0 FOR 31.38;
		LEVEL X FOR 3.534;
	}
}

TRANSITION_LIST("read/write")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 140.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 140.0;
			LEVEL 0 FOR 140.0;
		}
		LEVEL 1 FOR 440.0;
	}
}

TRANSITION_LIST("rom/ram")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 860.0;
	}
}

TRANSITION_LIST("start_address[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("start_address[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 410.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 570.0;
	}
}

TRANSITION_LIST("start_address[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 710.0;
	}
}

TRANSITION_LIST("start_address[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("start_address[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("reg_clk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 32.165;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 25.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.834;
		LEVEL 1 FOR 0.546;
		LEVEL 0 FOR 18.62;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 25.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.834;
		LEVEL 1 FOR 0.546;
		LEVEL 0 FOR 18.62;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 25.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.834;
		LEVEL 1 FOR 0.546;
		LEVEL 0 FOR 18.62;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 25.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.834;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.546;
			LEVEL 0 FOR 18.62;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 5.0;
				LEVEL 0 FOR 25.0;
			}
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 25.834;
		}
		LEVEL 1 FOR 0.546;
		LEVEL 0 FOR 18.62;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 25.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.834;
		LEVEL 1 FOR 0.546;
		LEVEL 0 FOR 6.455;
	}
}

DISPLAY_LINE
{
	CHANNEL = "start_address";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5;
}

DISPLAY_LINE
{
	CHANNEL = "start_address[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "start_address[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "start_address[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "start_address[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "start_address[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "address_clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "address";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
	CHILDREN = 8, 9, 10, 11, 12;
}

DISPLAY_LINE
{
	CHANNEL = "address[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "address[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "address[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "address[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "address[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
	CHILDREN = 14, 15, 16, 17;
}

DISPLAY_LINE
{
	CHANNEL = "data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "reg1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
	CHILDREN = 19, 20, 21, 22;
}

DISPLAY_LINE
{
	CHANNEL = "reg1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "reg1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "reg1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "reg1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "reg2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
	CHILDREN = 24, 25, 26, 27;
}

DISPLAY_LINE
{
	CHANNEL = "reg2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "reg2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "reg2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "reg2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "reg3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
	CHILDREN = 29, 30, 31, 32;
}

DISPLAY_LINE
{
	CHANNEL = "reg3[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "reg3[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "reg3[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "reg3[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "reg4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
	CHILDREN = 34, 35, 36, 37;
}

DISPLAY_LINE
{
	CHANNEL = "reg4[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "reg4[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "reg4[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "reg4[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "read/write";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rom/ram";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 39;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 40;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reg_clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 41;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 20000;
	MASTER = TRUE;
}
;
